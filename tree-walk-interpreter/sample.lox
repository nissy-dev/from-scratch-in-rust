print "=== check call function ===";

fun sayHi(first, last) {
  print "Hi, " + first + " " + last + "!";
}

sayHi("Dear", "Reader");

fun count(n) {
  if (n > 1) count(n - 1);
  print n;
}

count(3);

print "=== check return ====";
fun count_break(n) {
  while (n < 100) {
    if (n == 4) return n; // <--
    print n;
    n = n + 1;
  }
}

count_break(1);

print "=== closure ====";
fun makeCounter() {
  var i = 0;
  fun count() {
    i = i + 1;
    print i;
  }

  return count;
}

var counter = makeCounter();
counter(); // "1".
counter(); // "2".

print "==== recursive call ===";
fun fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}

for (var i = 0; i < 20; i = i + 1) {
  print fib(i);
}
